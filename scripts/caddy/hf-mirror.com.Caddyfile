# TLS证书设置。单独使用本文件需取消注释并正确设置。
# 以下是基于cloudflare的证书设置：
# (tls_hf_com) {
# 	tls {
# 		dns cloudflare ***
# 	}
# }
*.hf-mirror.com {
	import tls_hf_com
	redir https://hf-mirror.com
}
hf-mirror.com {
	import tls_hf_com
	log {
		output file /var/log/caddy/hf-mirror.com/access.log {
			roll_size 100M
			roll_keep 5
			roll_keep_for 720h
		}
	}

	# 封禁一些不讲武德（不尊重robots.txt）的爬虫
        @badbots {
		expression header({'User-Agent': '*SemrushBot*', 'User-Agent': '*MJ12bot*'})
	}

        handle @badbots {
                respond 403
        }

	# 前端路径进行压缩、文件代理、缓存
	@asset-paths {
		expression path('/api/event', '/front/*', '/avatars/*') || path_regexp('\\.(js|css|png|jpe?g|gif|ico|woff|otf|ttf|eot|svg|txt|pdf|docx?|xlsx?)$')
	}
	skip_log @asset-paths
	encode {
		zstd
		gzip
		match {
			header Content-Type text/*
			header Content-Type application/json*
			header Content-Type application/javascript*
			header Content-Type application/xhtml+xml*
			header Content-Type application/atom+xml*
			header Content-Type application/rss+xml*
			header Content-Type image/svg+xml*
			header Content-Type image/vnd.microsoft.icon
		}
	}
	header /* Server hf-mirror

	# 网站首页等静态文件
	@static {
		path / /favicon.ico /logo.svg /invalid_referer.html /login_error.html path /stats /stats/* /scripts.js /styles.css /robots.txt /ads.txt
	}
	handle @static {
		root * /var/www/html/hf-mirror.com/
		file_server
	}

	# 更换logo，用于区分原网站
	rewrite /front/assets/huggingface_logo-noborder.svg /logo.svg
	# 网站主页等页面不缓存
	header @static Cache-Control "no-cache"
	# 原网站静态文件缓存3天
	header /front/* Cache-Control "public, max-age=259200"

	# 部分内部统计接口直接返回固定数据，减少服务器压力
	handle /api/event {
		respond "OK"
		skip_log
	}
	handle /cdn-cgi/rum {
		respond 204
		skip_log
	}
	# 模型链接避免缓存
	@model_path {
		path_regexp .*/resolve/main/.*
	}
	header @model_path Cache-Control no-cache

	# 禁止第三方站点外链模型下载链接，其他路径允许外链
	@invalid_referer {
		path_regexp .*/resolve/main/.*
		not header !Referer
		not header_regexp Referer ^https?://(\.*\.)?hf-mirror\.com(/|$)
	}
	rewrite @invalid_referer /invalid_referer.html

	# 屏蔽部分不合规路径
	@illegal {
		path_regexp /.*([xX][jJ][pP]|[Xx][Ii][Jj][Ii][Nn]|[Jj][Ii][Nn][Pp][Ii][Nn]).*
	}
	handle @illegal {
		respond "invalid request" 403
	}

	# 镜像站禁止登录
	@auth {
		path /login /join
	}
	rewrite @auth /login_error.html

	@project_page {
		expression path_regexp('^/[^/]+/[^/]+/?$') || path_regexp('^/datasets/[^/]+/[^/]+/?$') || path_regexp('.*/tree/main/?$') || path_regexp('.*/discussions/?$')
	}
	handle @project_page {
		replace stream {
			https://huggingface.co https://hf-mirror.com
		}
		reverse_proxy https://huggingface.co {
			header_up Accept-Encoding identity
			header_up Host {upstream_hostport}
			header_up -Referer
			header_down Location cdn-lfs.huggingface.co cdn-lfs.hf-mirror.com
			header_down Location cdn-lfs-us-1.huggingface.co cdn-lfs-us-1.hf-mirror.com
		}
	}
	handle /* {
		skip_log
		reverse_proxy https://huggingface.co {
			header_up Host {upstream_hostport}
			header_up -Referer
			header_down Location cdn-lfs.huggingface.co cdn-lfs.hf-mirror.com
			header_down Location cdn-lfs-us-1.huggingface.co cdn-lfs-us-1.hf-mirror.com
		}
	}
}
